<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 注解扫描 -->
    <context:component-scan base-package="cn.ben.entry"/>
    <context:annotation-config/>

    <!-- 读入配置文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:config/application.properties</value>
                <value>classpath*:log4j.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="UTF-8"/>
    </bean>


    <!--<aop:aspectj-autoproxy/>-->


    <!--自定义数据源-->
    <!--<bean id="dataSource_db" class="com.mchange.v2.c3p0.ComboPooledDataSource"
        destroy-method="close">
        <property name="driverClass" value="${db.driverClassName}" />
        <property name="jdbcUrl" value="${db.url}" />
        <property name="user" value="${db.username}" />
        <property name="password" value="${db.password}" />
        <property name="initialPoolSize" value="${db.initialPoolSize}" />
        <property name="maxPoolSize" value="${db.maxPoolSize}" />
        <property name="minPoolSize" value="${db.minPoolSize}" />
        <property name="maxIdleTime" value="${db.maxIdleTime}" />
    </bean>
    <bean id="dataSource" class="com.winning.polaris_comm.util.datasource.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="dataSource_db" value-ref="dataSource_db" />
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="dataSource_db"/>
    </bean>-->

    <!--配置myBatis数据库连接工厂 -->
    <!--<bean id="statementHandlerInterceptor" class="com.winning.polaris_comm.util.interceptor.MybatisInterceptor" />
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-configuration.xml" />
        <property name="mapperLocations">
            <array>
                <value>
                   classpath*:/mapper/**/*.xml
                </value>
            </array>
        </property>
        <property name="plugins">
            <list>
                <ref local="statementHandlerInterceptor" />
            </list>
        </property>
    </bean>-->

    <!--采用自动扫描方式创建mapper bean -->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.winning.*.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>-->

    <!-- 事务控制 -->
    <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>-->

    <import resource="classpath*:config/dubboProvider.xml"/>
    <!-- 提供方应用信息，用于计算依赖关系，不要与消费方一样 -->
    <!--<dubbo:application name="demo-provider"/>-->

    <!-- 注册地址 -->
    <!--<dubbo:registry address="zookeeper://127.0.0.1:2181" check="false"/>-->

    <!-- 用dubbo协议在20880端口暴露服务 ，注意不能与其他服务端口相同  -->
    <!--<dubbo:protocol name="dubbo" port="7630"/>-->

    <!-- 从注册中心发现监控中心地址，否则直连监控中心 -->
    <!--<dubbo:monitor protocol="registry"/>-->

    <!-- 服务提供方的参数设定 -->
    <!--<dubbo:provider connections="${dubbo.provider.connections}" timeout="${dubbo.provider.timeout}" retries="0"/>-->

    <!-- 服务消费放方的参数设定 -->
    <!--<dubbo:consumer check="false"/>-->

    <!-- 注解方式扫描dubbo服务 -->
    <!--<dubbo:annotation package="cn.ben.entry"/>-->
</beans>